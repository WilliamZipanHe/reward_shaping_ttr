<!-- new launch file similar to gym-gazebo-->
<launch>
  <arg name="world_file"  default="$(env DUBINS_CAR_WORLD_CIRCUIT_GROUND)"/>
  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="paused" value="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" value="false"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->



  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
    <arg name="verbose" value="true"/>
  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

</launch>


<!-- Another launch file, being proved not working-->
<!--<launch>-->

  <!--<arg name="world_file"  default="$(env DUBINS_CAR_WORLD_CIRCUIT_GROUND)"/>-->
  <!--<arg name="gui" default="true"/>-->


  <!--<include file="$(find gazebo_ros)/launch/empty_world.launch">-->
    <!--<arg name="use_sim_time" value="true"/>-->
    <!--<arg name="debug" value="false"/>-->
    <!--<arg name="gui" value="$(arg gui)" />-->
    <!--<arg name="world_name" value="$(arg world_file)" />-->
    <!--<arg name="paused" value="true" />-->
    <!--<arg name="headless" value="false" />-->
  <!--</include>-->

  <!--&lt;!&ndash;<include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">&ndash;&gt;-->

    <!--&lt;!&ndash;<arg name="base" value="$(arg base)"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<arg name="stacks" value="$(arg stacks)"/>&ndash;&gt;-->
    <!--&lt;!&ndash;<arg name="3d_sensor" value="$(arg 3d_sensor)"/>&ndash;&gt;-->
  <!--&lt;!&ndash;</include>&ndash;&gt;-->
  <!--&lt;!&ndash;&ndash;&gt;-->

  <!--<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">-->
    <!--<param name="publish_frequency" type="double" value="30.0" />-->
  <!--</node>-->


  <!--<param name="robot_description" command="$(find xacro)/xacro.py &#45;&#45;inorder $(env PROJ_HOME)/urdfs/dubins_car.urdf.xacro"/>-->

  <!--&lt;!&ndash;FOR TEST NEW WORLD. CHANGE BACK IF NECESSARY&ndash;&gt;-->
  <!--<node name="spawn_dubins_car" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 0 -y -3 -z 0 -model dubins_car"-->
  <!--output="screen">-->
  <!--</node>-->

<!--</launch>-->
